<?php
require_once(ROOT_LIBS."/phpexcel/PHPExcel.class.php");
require_once(ROOT_LIBS."/phpexcel/PHPExcel/Writer/Excel2007.php");
ini_set("max_execution_time", 2400); // s 40 分钟 
//修改此次的最大运行内存 
ini_set("memory_limit", 1048576000); // Byte 1000 兆，即 1G
class phpexcel_settle extends STpl{
	private $domain;
	private $orgOwner;
	private $orgInfo;
	private $user;
    public  function __construct(){
		$this->user = user_api::loginedUser();
        if(empty($this->user)){
            $this->redirect("/site.main.login");
        }
		$domain_conf = SConfig::getConfig(ROOT_CONFIG."/const.conf","domain");
		$this->domain = $domain_conf->domain;
        $org = user_organization::subdomain();
        if(!empty($org)){
            $this->orgOwner=$org->userId;
        }else{
            header('Location: https://www.'.$this->domain);
        }
        $this->orgInfo=user_organization::getOrgByOwner($this->orgOwner);
        //判断管理员
        $isAdmin=user_api::isAdmin($this->orgOwner,$this->user['uid']);
        if($isAdmin===false){			
            header('Location: //'.$org->subdomain.'.'.$this->domain);
        }
    } 
	public function pageExportWithdrawLog($inPath){
		$orgId = $this->orgInfo->oid;
		$createTime = !empty($_GET['start'])?$_GET['start']:'';
		$status = isset($_GET['status'])?$_GET['status']:'';
		if(!empty($createTime)){
			$stime = date('Y-m-d',strtotime($createTime)).' 00:00:00';
			$etime = date('Y-m-d',strtotime($createTime)).' 23:59:59';
		}else{
			$stime = '';
			$etime = '';
		}
		$page = 1;
		$length = '';
		if($status == 2){
			$status = '2,3';
		}
		$withdrawList = user_organization::getOrgAccountWithdrawList($orgId,$page,$length,$stime,$etime,$status);	
		$year = date('Y',time());
		if(!empty($withdrawList->items)){
			foreach($withdrawList->items as &$wo){
				$wo->card_no = $wo->bank. ' 尾号'.substr($wo->card_no,-4);
				$createYear = date('Y',strtotime($wo->create_time));
				if($createYear == $year){
					$wo->create_time = date('m/d H:i',strtotime($wo->create_time));
				}else{
					$wo->create_time = date('Y/m/d H:i',strtotime($wo->create_time));
				}
				$wo->withdraw = '￥'.number_format(sprintf("%0.2f", floatval($wo->withdraw/100)), 2);
			}
			$data = $withdrawList->items;
		}else{
			$data = array();
		}
		
		//实例化表格
        $objPHPExcel = new PHPExcel(); 
        //保存excel—2007格式
        $objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
        //基本设置
        $fileName="提现记录列表";
        $objProps = $objPHPExcel->getProperties();
        $objProps->setCreator("www.yunke.com");
        $objProps->setLastModifiedBy("www.yunke.com");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, yunke");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("报表");
        $objPHPExcel->setActiveSheetIndex(0);
        // 行高
        for ($i = 1; $i <=200; $i++) {
            $objPHPExcel->getActiveSheet()->getRowDimension($i)->setRowHeight(22);
        }
        $objActiveSheet = $objPHPExcel->getActiveSheet();
        $objActiveSheet->setTitle($fileName);

        //设置表头
		$objActiveSheet->getColumnDimension('A')->setWidth(30);
		$objActiveSheet->getColumnDimension('B')->setWidth(50);
		$objActiveSheet->getColumnDimension('C')->setWidth(25);
		$objActiveSheet->getColumnDimension('D')->setWidth(20);
		$objActiveSheet->getColumnDimension('E')->setWidth(30);
        $objActiveSheet->getStyle('A1')->getFont()->setBold(true);
        $objActiveSheet->getStyle('B1')->getFont()->setBold(true);
        $objActiveSheet->getStyle('C1')->getFont()->setBold(true);
        $objActiveSheet->getStyle('D1')->getFont()->setBold(true);
        $objActiveSheet->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $objActiveSheet->getStyle('B1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $objActiveSheet->getStyle('C1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $objActiveSheet->getStyle('D1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        $objActiveSheet->setCellValue('A1', '银行卡');
        $objActiveSheet->setCellValue('B1', '提现金额');
		$objActiveSheet->setCellValue('C1', '交易时间');
        $objActiveSheet->setCellValue('D1', '备注');

        //设置第二列为文本格式 防止科学计数
       // $objActiveSheet->getStyle('B1')->getNumberFormat()->setFormatCode(\PHPExcel_Style_NumberFormat::FORMAT_TEXT);
        //填充表格内容
        $j=2;
        foreach($data as $k=>$v){
            $objActiveSheet->setCellValue('A' . $j, $v->card_no);
            $objActiveSheet->setCellValue('B' . $j, $v->withdraw);
            $objActiveSheet->setCellValue('C' . $j, $v->create_time);
            $objActiveSheet->setCellValue('D' . $j, $v->descript);
            $objActiveSheet->getStyle('A' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objActiveSheet->getStyle('B' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
            $objActiveSheet->getStyle('C' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objActiveSheet->getStyle('D' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $j++;
        }
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        if(empty($fileName)){
            $ftime = time();
            $outputFileName = $ftime . ".xls";
        }else{
            $outputFileName = $fileName . ".xls";
        }
        ob_clean();
        @header("Pragma: public");
        @header("Expires: 0");
        @header("Cache-Control:must-revalidate,post-check=0,pre-check=0");
        @header("Content-Type:charset=UTF-8");
        @header("Content-Type:application/force-download");
        @header("Content-Type:application/vnd.ms-execl");
        @header("Content-Type:application/octet-stream");
        @header("Content-Type:application/download");
        @header('Content-Disposition:attachment;filename="' . $outputFileName . '"');
        @header("Content-Transfer-Encoding:binary");
        $objWriter->save('php://output');

	}
	
	public function pageExportOverview($inPath){	
		$chartsType = isset($_GET['charts_type'])?$_GET['charts_type']:'order';
		$xtype = isset($_GET['xtype'])?$_GET['xtype']:'day';
		$startDate = isset($_GET['start'])?$_GET['start']:'';
		$endDate = isset($_GET['end'])?$_GET['end']:'';
		if(empty($startDate) && empty($endDate)){
			$startDate = date('Y-m-d',strtotime('-7 days'));
			$endDate = date('Y-m-d',strtotime('-1 days'));
		}
		$orgData = stat_api::getDayOrgStatByOwnerid($this->orgOwner,$startDate,$endDate);
		if(!empty($startDate) && empty($endDate)){
			$endDate = $startDate;
		}
		if(empty($startDate) && !empty($endDate)){
			$startDate = $endDate; 
		}
		$list = array();
		$incomeAll = 0;
		if($xtype == 'day'){
			$orgData = stat_api::getDayOrgStatByOwnerid($this->orgOwner,$startDate,$endDate);
			if(!empty($startDate) && empty($endDate)){
				$endDate = $startDate;
			}
			if(empty($startDate) && !empty($endDate)){
				$startDate = $endDate;
			}
			$lastDay = date('Y-m-d',strtotime('-1 days',strtotime($startDate)));
			$orgLastData = stat_api::getDayOrgStatByOwnerid($this->orgOwner,$lastDay,'');
			if(!empty($orgLastData)){
				$lastData['order_new'] = $orgLastData[0]->order_new;
				$lastData['income_new'] = $orgLastData[0]->income_new;
			}else{
				$lastData['order_new'] = 0;
				$lastData['income_new'] = 0;
			}
			$timeArr = $this->timeFormat($startDate, $endDate);
			if($chartsType == 'account'){
				$orgTemp = array();
				if(!empty($orgData)){
					foreach($orgData as $org){
						$orgTemp[$org->pk_day] = $org->income_new;
						$incomeAll += $org->income_new;
					}
				}
				foreach($timeArr as $to){
					$yesDay = date('Y-m-d',strtotime('-1 days', strtotime($to)));
					if(isset($orgTemp[$to])){
						$income = $orgTemp[$to];
					}else{
						$income = 0;
					}
					if($yesDay == $lastDay){
						$chaPercent = $this->settlePercent($income,$lastData['income_new']);
						$list[$to]['percent'] = $chaPercent['percent'];
						$list[$to]['status']  = $chaPercent['status'];
					}elseif(isset($orgTemp[$yesDay])){
						$chaPercent = $this->settlePercent($income,$orgTemp[$yesDay]);
						$list[$to]['percent'] = $chaPercent['percent'];
						$list[$to]['status']  = $chaPercent['status'];
					}else{
						$chaPercent = $this->settlePercent($income,0);
						$list[$to]['percent'] = $chaPercent['percent'];
						$list[$to]['status']  = $chaPercent['status'];
					}
					$listIncome = number_format(sprintf("%0.2f", floatval($income/100)), 2);
					$list[$to]['income_all'] = $listIncome;
				}
			}elseif($chartsType == 'order'){
				$orgTemp = array();
				if(!empty($orgData)){
					foreach($orgData as $org){
						$orgTemp[$org->pk_day] = $org->order_new;
					}
				}
				foreach($timeArr as $to){
					$yesDay = date('Y-m-d',strtotime('-1 days', strtotime($to)));
					if(isset($orgTemp[$to])){
						$orderCount = $orgTemp[$to];
					}else{
						$orderCount = 0;
					}
					if($yesDay == $lastDay){
						$chaPercent = $this->settlePercent($orderCount,$lastData['order_new']);
						$list[$to]['percent'] = $chaPercent['percent'];
						$list[$to]['status']  = $chaPercent['status'];
					}elseif(isset($orgTemp[$yesDay])){
						$chaPercent = $this->settlePercent($orderCount,$orgTemp[$yesDay]);
						$list[$to]['percent'] = $chaPercent['percent'];
						$list[$to]['status']  = $chaPercent['status'];
					}else{
						$chaPercent = $this->settlePercent($orderCount,0);
						$list[$to]['percent'] = $chaPercent['percent'];
						$list[$to]['status']  = $chaPercent['status'];
					}
					$orderCount = number_format($orderCount);
					$list[$to]['order_count'] = $orderCount;
				}
			}
		}elseif($xtype == 'month'){
			if(!empty($startDate) && empty($endDate)){
				$endDate = $startDate;
			}
			if(empty($startDate) && !empty($endDate)){
				$startDate = $endDate;
			}
			$startYear = date('Y',strtotime($startDate));
			$startMonth = date('m',strtotime($startDate));
			$endYear = date('Y',strtotime($endDate));
			$endMonth = date('m',strtotime($endDate));
			if($startYear != $endYear){
				$startNew = $startYear.'-'.$startMonth.'-01';
				$dayCount = date('t',strtotime($endYear.'-'.$endMonth.'-01'));
				$endNew = date('Y-m-d',strtotime($endYear.'-'.$endMonth.'-01')+($dayCount-1)*24*3600);
			}elseif($startYear == $endYear){
				if($startMonth !=  $endMonth){
					$startNew = $startYear.'-'.$startMonth.'-01';
					$dayCount = date('t',strtotime($endYear.'-'.$endMonth.'-01'));
					$endNew = date('Y-m-d',strtotime($endYear.'-'.$endMonth.'-01')+($dayCount-1)*24*3600);
				}elseif($startMonth ==  $endMonth){
					$startNew = $startYear.'-'.$startMonth.'-01';
					$dayCount = date('t',strtotime($startNew));
					$endNew = date('Y-m-d',strtotime($startNew)+($dayCount-1)*24*3600);
				}
			}
			$orgData = stat_api::getDayOrgStatByOwnerid($this->orgOwner,$startNew,$endNew);
			$currYear = date('Y',time());
			$lastMonth = date('Y-m',strtotime('-1 month',strtotime($startDate)));
			$lastMonthStart = $lastMonth.'-01';
			$dayCount = date('t',strtotime($lastMonthStart));
			$lastMonthEnd = date('Y-m-d',strtotime($lastMonthStart)+($dayCount-1)*24*3600);
			$lastMonthData = stat_api::getDayOrgStatOrderCountByDay($this->orgOwner,$lastMonthStart,$lastMonthEnd);
			if(!empty($lastMonthData)){
				$lastData['order_new'] = $lastMonthData->order_count;
				$lastData['income_new'] = $lastMonthData->income_all;
			}else{
				$lastData['order_new'] = 0;
				$lastData['income_new'] = 0;
			}
			$monArr = $this->monthFormat($startDate,$endDate);
			if($chartsType == 'account'){
				$orgTemp = array();
				if(!empty($orgData)){
					foreach($orgData as $org){
						$orgMonth = date('Y-m',strtotime($org->pk_day));
						if(!isset($orgTemp[$orgMonth])){
							$orgTemp[$orgMonth] = 0;
						}
						$orgTemp[$orgMonth] += $org->income_new;
						$incomeAll += $org->income_new;
					}
				}
				foreach($monArr as $mv){
					$ytime = strtotime($mv);
					$yesMonth = date('Y-m',strtotime('-1 month', $ytime));
					if(date('Y',$ytime) != $currYear ){
						$mkey = str_replace('-','年',date('Y-m',$ytime)).'月';
					}else{
						$mkey = date('m',$ytime).'月';
					}
					if(isset($orgTemp[$mv])){
						$income = $orgTemp[$mv];
					}else{
						$income = 0;
					}
					if($yesMonth == $lastMonth){
						$chaPercent = $this->settlePercent($income,$lastData['income_new']);
						$list[$mkey]['percent'] = $chaPercent['percent'];
						$list[$mkey]['status']  = $chaPercent['status'];
					}elseif(isset($orgTemp[$yesMonth])){
						$chaPercent = $this->settlePercent($income, $orgTemp[$yesMonth]);
						$list[$mkey]['percent'] = $chaPercent['percent'];
						$list[$mkey]['status']  = $chaPercent['status'];
					}else{
						$chaPercent = $this->settlePercent($income, 0);
						$list[$mkey]['percent'] = $chaPercent['percent'];
						$list[$mkey]['status']  = $chaPercent['status'];
					}
					$listIncome = number_format(sprintf("%0.2f", floatval($income/100)), 2);
					$list[$mkey]['income_all'] = $listIncome;
					$mstart = $mv.'-01';
					$mcount = date('t',strtotime($mstart));
					$mend = date('Y-m-d',strtotime($mstart)+($mcount-1)*24*3600);
					$list[$mkey]['start_date'] = $mstart;
					$list[$mkey]['end_date'] = $mend;
				}
			}elseif($chartsType == 'order'){
				$orgTemp = array();
				if(!empty($orgData)){
					foreach($orgData as $org){
						$orgMonth = date('Y-m',strtotime($org->pk_day));
						if(!isset($orgTemp[$orgMonth])){
							$orgTemp[$orgMonth] = 0;
						}
						$orgTemp[$orgMonth] += $org->order_new;
					}
				}
				foreach($monArr as $mv){
					$ytime = strtotime($mv);
					$yesMonth = date('Y-m',strtotime('-1 month', $ytime));
					if(date('Y',$ytime) != $currYear ){
						$mkey = str_replace('-','年',date('Y-m',$ytime)).'月';
					}else{
						$mkey = date('m',$ytime).'月';
					}
					if(isset($orgTemp[$mv])){
						$orderCount = $orgTemp[$mv];
					}else{
						$orderCount = 0;
					}
					if($yesMonth == $lastMonth){
						$chaPercent = $this->settlePercent($orderCount,$lastData['order_new']);
						$list[$mkey]['percent'] = $chaPercent['percent'];
						$list[$mkey]['status']  = $chaPercent['status'];
					}elseif(isset($orgTemp[$yesMonth])){
						$chaPercent = $this->settlePercent($orderCount,$orgTemp[$yesMonth]);
						$list[$mkey]['percent'] = $chaPercent['percent'];
						$list[$mkey]['status']  = $chaPercent['status'];
					}else{
						$chaPercent = $this->settlePercent($orderCount,0);
						$list[$mkey]['percent'] = $chaPercent['percent'];
						$list[$mkey]['status']  = $chaPercent['status'];
					}
					$orderCount = number_format($orderCount);
					$list[$mkey]['order_count'] = $orderCount;
					$mstart = $mv.'-01';
					$mcount = date('t',strtotime($mstart));
					$mend = date('Y-m-d',strtotime($mstart)+($mcount-1)*24*3600);
					$list[$mkey]['start_date'] = $mstart;
					$list[$mkey]['end_date'] = $mend;
				}
			}
		}
        $objPHPExcel = new PHPExcel(); 
        $objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
		if($chartsType == 'account'){
			$fileName="总收入列表";
		}else{
			$fileName="销售订单列表";
		}
        $objProps = $objPHPExcel->getProperties();
        $objProps->setCreator("www.yunke.com");
        $objProps->setLastModifiedBy("www.yunke.com");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, yunke");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("报表");
        $objPHPExcel->setActiveSheetIndex(0);

        $objActiveSheet = $objPHPExcel->getActiveSheet();
        $objActiveSheet->setTitle($fileName);

        //设置表头
		$objActiveSheet->getColumnDimension('A')->setWidth(40);
		$objActiveSheet->getColumnDimension('B')->setWidth(20);
		$objActiveSheet->getColumnDimension('C')->setWidth(20);
		$j=2;
		if($chartsType == 'account'){
			$objPHPExcel->getActiveSheet()->mergeCells('A1:C1');
			$objActiveSheet->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->setCellValue('A1', $fileName);
			$objPHPExcel->getActiveSheet()->mergeCells('A2:C2');
			$objActiveSheet->getStyle('A2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
			$objActiveSheet->setCellValue('A2', "内容仅供参考，不作为凭证");
			$objPHPExcel->getActiveSheet()->mergeCells('A3:C3');
			$objActiveSheet->getStyle('A3')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
			$objActiveSheet->setCellValue('A3', "自[".$startDate."]至[".$endDate."]");
			$objPHPExcel->getActiveSheet()->mergeCells('A4:C4');
			$objActiveSheet->getStyle('A4')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
			$incomeAll = number_format(sprintf("%0.2f", floatval($incomeAll/100)), 2);
			$objActiveSheet->setCellValue('A4', "本期收入金额：[￥".$incomeAll."]");
			$objActiveSheet->getStyle('A5')->getFont()->setBold(true);
			$objActiveSheet->getStyle('B5')->getFont()->setBold(true);
			$objActiveSheet->getStyle('C5')->getFont()->setBold(true);
			$objActiveSheet->getStyle('A5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('B5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('C5')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->setCellValue('A5', '日期');
			$objActiveSheet->setCellValue('B5', '总收入');
			if($xtype == 'day'){
				$objActiveSheet->setCellValue('C5', '昨日对比');
			}elseif($xtype == 'month'){
				$objActiveSheet->setCellValue('C5', '上月对比');
			}
			$j=6;
		}else{
			$objActiveSheet->getStyle('A1')->getFont()->setBold(true);
			$objActiveSheet->getStyle('B1')->getFont()->setBold(true);
			$objActiveSheet->getStyle('C1')->getFont()->setBold(true);
			$objActiveSheet->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('B1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('C1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->setCellValue('A1', '日期');
			$objActiveSheet->setCellValue('B1', '销售订单');
			if($xtype == 'day'){
				$objActiveSheet->setCellValue('C1', '昨日对比');
			}elseif($xtype == 'month'){
				$objActiveSheet->setCellValue('C1', '上月对比');
			}
		}
        foreach($list as $k=>$v){
            $objActiveSheet->setCellValue('A' . $j, $k);
			if($chartsType == 'account'){
				$objActiveSheet->setCellValue('B'.$j,$v['income_all']);
			}else{
				$objActiveSheet->setCellValue('B'.$j,$v['order_count']);
			}
			if($v['status'] == -1){
				$objActiveSheet->setCellValue('C'.$j,'-'.$v['percent']);
			}else{
				$objActiveSheet->setCellValue('C'.$j,$v['percent']);
			}
            $objActiveSheet->getStyle('A' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $objActiveSheet->getStyle('B' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);
            $objActiveSheet->getStyle('C' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
            $j++;
        }
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        if(empty($fileName)){
            $ftime = time();
            $outputFileName = $ftime . ".xls";
        }else{
            $outputFileName = $fileName . ".xls";
        }
        ob_clean();
        @header("Pragma: public");
        @header("Expires: 0");
        @header("Cache-Control:must-revalidate,post-check=0,pre-check=0");
        @header("Content-Type:charset=UTF-8");
        @header("Content-Type:application/force-download");
        @header("Content-Type:application/vnd.ms-execl");
        @header("Content-Type:application/octet-stream");
        @header("Content-Type:application/download");
        @header('Content-Disposition:attachment;filename="' . $outputFileName . '"');
        @header("Content-Transfer-Encoding:binary");
        $objWriter->save('php://output');
	}
	public function timeFormat($begin, $end){
        $time = range(strtotime($begin), strtotime($end),24*60*60);
        return  array_map(create_function('$v', 'return date("Y-m-d", $v);'), $time);
    }
	
	public function monthFormat($begin, $end){
        $stime = strtotime($begin);
		$etime = strtotime($end);
		$currYear = date('Y',time());
		$monArr = array();
		$monArr[] = date('Y-m',$stime);
		while( ($stime = strtotime('+1 month', $stime)) <= $etime){
			$monArr[] = date('Y-m',$stime);
		}
        return $monArr;
    }
	public function pageAccountDetail($inPath)
	{
		if(empty($inPath[3])){
			$this->redirect("/site.main.entry");
		}
		$clearId = (int)$inPath[3];
		$orgId   = $this->orgInfo->oid;
		$clearRes = org_api::getClearByClaerId($clearId,$orgId);
		if(empty($clearRes->data)){
			$this->redirect("/site.main.entry");
		}
		$create_time = $clearRes->data->create_time;
		$end_time = $clearRes->data->end_time;
		/*$userParams = [
			'orgId'     => $orgId,
			'status'    => 3,
			'endTime'   => $clearRes->data->end_time,
			'startTime' => $clearRes->data->create_time
		];
		$contentRes = org_api::getUserOrderContentList($userParams);
		if(empty($contentRes->data->items)){
			$this->redirect("/site.main.entry");
		}
		//机构结算订单详情
		$contentOrderId = array();
		foreach($contentRes->data->items as $val){
			$contentOrderId[] = $val->fk_order_content;
		}
		*/
		$orderContentParam = [
			//'contentOrderArr' => $contentOrderId
			'clearingId' => $clearId,
			'orgId'=>$orgId,
			'status'=>2
		];
		$orderRes = org_api::getOrderInfo($orderContentParam,0,0);

		//分销订单
		$resellOrderContentParam = [
			//'contentOrderArr' => $contentOrderId
			'orgId'=>$orgId,
			'resellOrgId'=>$orgId,
			'startTime'=>$create_time,
			'endTime'=>$end_time,
			'clearingId'=>$clearId,
			'status'=>2
		];
		$resellOrderRes = org_api::getOrderInfo($resellOrderContentParam,0,0);
		if(empty($orderRes->items)&&empty($resellOrderRes->items)){
			$this->redirect("/site.main.entry");
		}
		//拼装数据
		$userIdArr = array();
		$courseArr = array();
		$memberArr = array();
		$extArr    = array();
		if(!empty($orderRes->items)) {
			foreach ($orderRes->items as $val) {
				$userIdArr[] = $val->fk_user;
				if ($val->object_type == 1) {
					$courseArr[] = $val->object_id;
				}
				if ($val->object_type == 11) {
					$memberArr[$val->object_id] = $val->object_id;
					$extArr[$val->object_id] = $val->ext;
				}
			}
		}
		$memberInfo = array();
		if(!empty($memberArr)){
			$memberRes = org_api::getorgmembersets(array('setId'=>implode(',',$memberArr)));
			if(($memberRes->code == 0)){
				foreach($memberRes->result->items as $val){
					$memberInfo[$val->pk_member_set]['name'] = $val->title;
					if($extArr[$val->pk_member_set] == 1){
						$memberInfo[$val->pk_member_set]['useTime'] = '一个月';
					}elseif($extArr[$val->pk_member_set] == 2){
						$memberInfo[$val->pk_member_set]['useTime'] = '三个月';
					}elseif($extArr[$val->pk_member_set] == 3){
						$memberInfo[$val->pk_member_set]['useTime'] = '六个月';
					}elseif($extArr[$val->pk_member_set] == 4){
						$memberInfo[$val->pk_member_set]['useTime'] = '一年';
					}
				}
			}
		}
		//用户信息
		$userName = array();
		if(!empty($userIdArr)){
			$userRes = user_api::listUsersByUserIds($userIdArr);
			if(!empty($userRes->code == 0)){
				foreach($userRes->result as $val){
					$userName[$val->pk_user] = $val->real_name;
				}
			}
		}
		//课程信息(中间层)
		$courseInfo = array();
		if(!empty($courseArr)){
			$courseIds = implode(',',$courseArr);
			$params = [
				'q' => ['course_id'=>$courseIds],
				'f' => ['course_id','course_name','class_name'],
				'p' => 1,
				'pl'=> 10000
			];
			$planRes = seek_api::seekplan($params);	
			if(!empty($planRes->data)){
				foreach($planRes->data as $val){
					$courseInfo[$val->course_id] = [
						'courseName' => $val->course_name,
						'className'  => $val->class_name
					];
				}
			}
		}
		$payType = [1=>'支付宝',2=>'微信',3=>'免费',4=>'苹果'];
		
		$course = array();
		$member = array();
		if(!empty($orderRes->items)) {
			foreach ($orderRes->items as $val) {
				$gateway_price = $val->gateway_price/100;
				$platform_price = $val->platform_price/100;
				$tax_price = $val->tax_price/100;
				$distribute_price = $val->distribute_price/100;
				$price = $val->promote_status==1?$val->price_promote:$val->price;
				$actual_price = $price-($gateway_price+$platform_price+$tax_price+$distribute_price);
				if ($val->object_type == 1) {
					$course[] = [
						'courseName' => !empty($courseInfo[$val->object_id]['courseName']) ? $courseInfo[$val->object_id]['courseName'] : '',
						'className' => !empty($courseInfo[$val->object_id]['className']) ? $courseInfo[$val->object_id]['className'] : '',
						'orderId' => date('Ymd', strtotime($val->create_time)) . $val->fk_order,
						'createTime' => date('Y-m-d', strtotime($val->create_time)),
						'payType' => !empty($payType[$val->pay_type]) ? $payType[$val->pay_type] : '',
						'userName' => !empty($userName[$val->fk_user]) ? $userName[$val->fk_user] : '',
						'objectType' => $val->object_type,
						'price' => !empty($actual_price)?$actual_price:($val->promote_status == 1 ? $val->price_promote / 100 : $val->price / 100),
						'priceOld' => $val->price_old / 100,
						'isFee' => ($val->price == 0) ? 0 : 1,
						'discountPrice' => ($val->price_old / 100) - ($val->price / 100),
						'discountStatus' => ($val->discount_status == 0) ? 0 : 1,
						'gateway_price' => !empty($gateway_price)?$gateway_price:0,
						'platform_price' => !empty($platform_price)?$platform_price:0,
						'tax_price' => !empty($tax_price)?$tax_price:0,
						'distribute_price' => !empty($distribute_price)?$distribute_price:0,
					];
				} elseif ($val->object_type == 11) {
					$member[] = [
						'memberName' => !empty($memberInfo[$val->object_id]['name']) ? $memberInfo[$val->object_id]['name'] :'',
						'useTime'    => !empty($memberInfo[$val->object_id]['useTime']) ? $memberInfo[$val->object_id]['useTime'] :'',
						'orderId' => date('Ymd', strtotime($val->create_time)) . $val->fk_order,
						'createTime' => date('Y-m-d', strtotime($val->create_time)),
						'payType' => !empty($payType[$val->pay_type]) ? $payType[$val->pay_type] : '',
						'userName' => !empty($userName[$val->fk_user]) ? $userName[$val->fk_user] : '',
						'objectType' => $val->object_type,
						'price' => $val->price / 100,
						'priceOld' => $val->price_old / 100,
						'isFee' => ($val->price == 0) ? 0 : 1,
						'discountPrice' => ($val->price_old / 100) - ($val->price / 100),
						'discountStatus' => ($val->discount_status == 0) ? 0 : 1,
						'gateway_price' => !empty($gateway_price)?$gateway_price:0,
						'platform_price' => !empty($platform_price)?$platform_price:0,
						'tax_price' => !empty($tax_price)?$tax_price:0
					];
				}

			}
		}
		//分销
		//拼装数据
		$userIdArr = array();
		$courseArr = array();
		if(!empty($resellOrderRes->items)) {
			foreach ($resellOrderRes->items as $val) {
				$userIdArr[] = $val->fk_user;
				if ($val->object_type == 1) {
					$courseArr[] = $val->object_id;
				}
			}
		}

		//用户信息
		$userName = array();
		if(!empty($userIdArr)){
			$userRes = user_api::listUsersByUserIds($userIdArr);
			if(!empty($userRes->code == 0)){
				foreach($userRes->result as $val){
					$userName[$val->pk_user] = $val->real_name;
				}
			}
		}
		//课程信息(中间层)
		$courseInfo = array();
		if(!empty($courseArr)){
			$courseIds = implode(',',$courseArr);
			$params = [
				'q' => ['course_id'=>$courseIds],
				'f' => ['course_id','course_name','class_name'],
				'p' => 1,
				'pl'=> 10000
			];
			$planRes = seek_api::seekplan($params);
			if(!empty($planRes->data)){
				foreach($planRes->data as $val){
					$courseInfo[$val->course_id] = [
						'courseName' => $val->course_name,
						'className'  => $val->class_name
					];
				}
			}
		}
		$payType = [1=>'支付宝',2=>'微信',3=>'免费',4=>'苹果'];

		$resell = array();
		if(!empty($resellOrderRes->items)) {
			foreach ($resellOrderRes->items as $val) {
				$gateway_price_resell = $val->gateway_price_resell/100;
				$platform_price_resell = $val->platform_price_resell/100;
				$tax_price_resell = $val->tax_price_resell/100;
				$price = ($val->price-$val->price_promote)/100;
				$actual_price = $price-($gateway_price_resell+$platform_price_resell+$tax_price_resell);
				if ($val->object_type == 1) {
					$resell[] = [
						'courseName' => !empty($courseInfo[$val->object_id]['courseName']) ? $courseInfo[$val->object_id]['courseName'] : '',
						'className' => !empty($courseInfo[$val->object_id]['className']) ? $courseInfo[$val->object_id]['className'] : '',
						'orderId' => date('Ymd', strtotime($val->create_time)) . $val->fk_order,
						'createTime' => date('Y-m-d', strtotime($val->create_time)),
						'payType' => !empty($payType[$val->pay_type]) ? $payType[$val->pay_type] : '',
						'userName' => !empty($userName[$val->fk_user]) ? $userName[$val->fk_user] : '',
						'objectType' => $val->object_type,
						'price' => !empty($actual_price)?$actual_price:($val->promote_status == 1 ? ($val->price-$val->price_promote) / 100 : 0),
						'priceOld' => $val->price_old / 100,
						'isFee' => ($val->price == 0) ? 0 : 1,
						'discountPrice' => ($val->price_old / 100) - ($val->price / 100),
						'discountStatus' => ($val->discount_status == 0) ? 0 : 1,
						'gateway_price_resell' => !empty($gateway_price_resell)?$gateway_price_resell:0,
						'platform_price_resell' => !empty($platform_price_resell)?$platform_price_resell:0,
						'tax_price_resell' => !empty($tax_price_resell)?$tax_price_resell:0
					];
				}

			}
		}
        $objPHPExcel = new PHPExcel(); 
        $objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
		$fileName="结算列表";
        $objProps = $objPHPExcel->getProperties();
        $objProps->setCreator("www.yunke.com");
        $objProps->setLastModifiedBy("www.yunke.com");
        $objProps->setTitle("Office XLS Test Document");
        $objProps->setSubject("Office XLS Test Document, yunke");
        $objProps->setDescription("Test document, generated by PHPExcel.");
        $objProps->setKeywords("office excel PHPExcel");
        $objProps->setCategory("报表");
        $objPHPExcel->setActiveSheetIndex(0);
		$objActiveSheet = $objPHPExcel->getActiveSheet();
        $objActiveSheet->setTitle($fileName);
		
		//设置表头
		$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(30);
		$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(20);
		$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
		$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);
		$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(20);
		$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(20);
		$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(20);
		$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(20);
		
		$headeData = array(
			1=>'云课收支明细',
			2=>'内容仅供参考，不作为凭证',
			3=>'账户名',
			4=>"自[{$clearRes->data->create_time}]至[{$clearRes->data->end_time}]",
			5=>'总收入金额：['.($clearRes->data->price/100).']',
			6=>"可提现金额：[".($clearRes->data->price/100)."]可提现笔数：[{$clearRes->data->order_count}]",
			7=>"下载时间：[".date('Y-m-d H:i:s')."]"
		);

		for($i=1;$i<=6;$i++){
			$objPHPExcel->getActiveSheet()->mergeCells("A1:I1");
			$objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->setCellValue("A".$i, $headeData[$i]);
		}
		if(!empty($course)) {
			$objActiveSheet->setCellValue('A' . $i, "课程收入明细列表");
			$objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objPHPExcel->getActiveSheet()->mergeCells("A{$i}:I{$i}");
			$i++;
			$objActiveSheet->setCellValue('A' . $i, "订单号");
			$objActiveSheet->setCellValue('B' . $i, "时间");
			$objActiveSheet->setCellValue('C' . $i, "课程名称");
			$objActiveSheet->setCellValue('D' . $i, "班级");
			$objActiveSheet->setCellValue('E' . $i, "支付手续费");
			$objActiveSheet->setCellValue('F' . $i, "平台分成");
			$objActiveSheet->setCellValue('G' . $i, "税费");
			$objActiveSheet->setCellValue('H' . $i, "渠道分成");
			$objActiveSheet->setCellValue('I' . $i, "实际收入");
			$objActiveSheet->setCellValue('J' . $i, "优惠券");
			$objActiveSheet->setCellValue('K' . $i, "购买者");
			$objActiveSheet->setCellValue('L' . $i, "支付方式");
			$i++;
			foreach ($course as $val) {
				$objActiveSheet->setCellValue("A" . $i, $val['orderId']);
				$objActiveSheet->setCellValue("B" . $i, $val['createTime']);
				$objActiveSheet->setCellValue("C" . $i, $val['courseName']);
				$objActiveSheet->setCellValue("D" . $i, $val['className']);
				$objActiveSheet->setCellValue("E" . $i, $val['gateway_price']);
				$objActiveSheet->setCellValue("F" . $i, $val['platform_price']);
				$objActiveSheet->setCellValue("G" . $i, $val['tax_price']);
				$objActiveSheet->setCellValue("H" . $i, $val['distribute_price']);
				$objActiveSheet->setCellValue("I" . $i, $val['price']);
				$objActiveSheet->setCellValue("J" . $i, $val['discountPrice']);
				$objActiveSheet->setCellValue("K" . $i, $val['userName']);
				$objActiveSheet->setCellValue("L" . $i, $val['payType']);
				$i++;
			}
		}
		if(!empty($resell)) {
			$objActiveSheet->setCellValue('A' . $i, "分销课程收入明细列表");
			$objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objPHPExcel->getActiveSheet()->mergeCells("A{$i}:I{$i}");
			$i++;
			$objActiveSheet->setCellValue('A' . $i, "订单号");
			$objActiveSheet->setCellValue('B' . $i, "时间");
			$objActiveSheet->setCellValue('C' . $i, "课程名称");
			$objActiveSheet->setCellValue('D' . $i, "班级");
			$objActiveSheet->setCellValue('E' . $i, "支付手续费");
			$objActiveSheet->setCellValue('F' . $i, "平台分成");
			$objActiveSheet->setCellValue('G' . $i, "税费");
			$objActiveSheet->setCellValue('H' . $i, "实际收入");
			$objActiveSheet->setCellValue('I' . $i, "优惠券");
			$objActiveSheet->setCellValue('J' . $i, "购买者");
			$objActiveSheet->setCellValue('K' . $i, "支付方式");
			$i++;
			foreach ($resell as $val) {
				$objActiveSheet->setCellValue("A" . $i, $val['orderId']);
				$objActiveSheet->setCellValue("B" . $i, $val['createTime']);
				$objActiveSheet->setCellValue("C" . $i, $val['courseName']);
				$objActiveSheet->setCellValue("D" . $i, $val['className']);
				$objActiveSheet->setCellValue("E" . $i, $val['gateway_price']);
				$objActiveSheet->setCellValue("F" . $i, $val['platform_price']);
				$objActiveSheet->setCellValue("G" . $i, $val['tax_price']);
				$objActiveSheet->setCellValue("H" . $i, $val['price']);
				$objActiveSheet->setCellValue("I" . $i, $val['discountPrice']);
				$objActiveSheet->setCellValue("J" . $i, $val['userName']);
				$objActiveSheet->setCellValue("K" . $i, $val['payType']);
				$i++;
			}
		}
		//会员明细
		if(!empty($member)) {
			$objActiveSheet->setCellValue('A' . $i, "会员收入明细列表");
			$objPHPExcel->getActiveSheet()->getStyle('A' . $i)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objPHPExcel->getActiveSheet()->mergeCells("A{$i}:I{$i}");
			$i++;
			$objActiveSheet->setCellValue('A' . $i, "订单号");
			$objActiveSheet->setCellValue('B' . $i, "时间");
			$objActiveSheet->setCellValue('C' . $i, "会员名称");
			$objActiveSheet->setCellValue('D' . $i, "会员时限");
			$objActiveSheet->setCellValue('E' . $i, "支付方式");
			$objActiveSheet->setCellValue('F' . $i, "支付手续费");
			$objActiveSheet->setCellValue('G' . $i, "平台分成");
			$objActiveSheet->setCellValue('H' . $i, "税费");
			$objActiveSheet->setCellValue('I' . $i, "实际收入");
			$objActiveSheet->setCellValue('J' . $i, "购买者");
			$i++;
			foreach ($member as $val) {
				$objActiveSheet->setCellValue("A" . $i, $val['orderId']);
				$objActiveSheet->setCellValue("B" . $i, $val['createTime']);
				$objActiveSheet->setCellValue("C" . $i, $val['memberName']);
				$objActiveSheet->setCellValue("D" . $i, $val['useTime']);
				$objActiveSheet->setCellValue("E" . $i, $val['payType']);
				$objActiveSheet->setCellValue("F" . $i, $val['gateway_price_resell']);
				$objActiveSheet->setCellValue("G" . $i, $val['platform_price_resell']);
				$objActiveSheet->setCellValue("H" . $i, $val['tax_price_resell']);
				$objActiveSheet->setCellValue("I" . $i, $val['price']);
				$objActiveSheet->setCellValue("J" . $i, $val['userName']);
				$i++;
			}
		}
        $outputFileName = date('Y-m-d',strtotime($end_time))." ".$fileName . ".xls";
		ob_clean();
        @header("Pragma: public");
        @header("Expires: 0");
        @header("Cache-Control:must-revalidate,post-check=0,pre-check=0");
        @header("Content-Type:charset=UTF-8");
        @header("Content-Type:application/force-download");
        @header("Content-Type:application/vnd.ms-execl");
        @header("Content-Type:application/octet-stream");
        @header("Content-Type:application/download");
        @header('Content-Disposition:attachment;filename="' . $outputFileName . '"');
        @header("Content-Transfer-Encoding:binary");
        $objWriter->save('php://output');
		
	}

	public function settlePercent($today,$last){
		$ret = array(
			'percent' => '----',
			'status'  => 0
		);
		if(empty($last) && !empty($today)){
			$ret['percent'] = '----';
			$ret['status']  = 0;
		}elseif(!empty($last) && empty($today)){
			$ret['percent'] = '100%';
			$ret['status']  = -1;
		}elseif(empty($last) && empty($today)){
			$ret['percent'] = '----';
			$ret['status']  = 0;
		}elseif(!empty($last) && !empty($today)){
			if($last > $today){
				$cha = $last - $today;
				$ret['percent'] = floor(($cha/$last)*100) . '%';
				$ret['status']  = -1;
			}elseif($last < $today){
				$cha = $today - $last;
				$ret['percent'] = floor(($cha/$last)*100) . '%';
				$ret['status']  = 1;
			}elseif($last == $today){
				$ret['percent'] = '0%';
				$ret['status']  = 0;
			}
		}
		return $ret;
	}

	public function pageExportRefund($inPath){
		if(!empty($_REQUEST['st'])){
			$params['time'][0] = $_REQUEST['st'];
		}else{
			$params['time'] = array();
		}
		if(!empty($_REQUEST['et'])){
			$params['time'][1] = $_REQUEST['et'];
		}else{
			$params['time'] = array();
		}
		if(isset($_REQUEST["status"])){
			$params["status"] = $_REQUEST["status"];
		}else{
			$params["status"] = 'all';
		}
		$params['orgId'] = $this->orgInfo->oid;
		$orderRefund = order_api::getOrderRefundList(1,0,$params);
		$data = array();
		if(!empty($orderRefund["data"])){
			foreach($orderRefund["data"] as $k=>$val){
				$data[$k]["createTime"] = $val->refund_create_time;
				$data[$k]["courseName"] = $val->course['name'];
				$data[$k]["className"] = $val->course['className'];
				$data[$k]["orderSn"] = $val->orderSn;
				$data[$k]["planNum"] = $val->course['planNum'];
				$data[$k]["stuName"] = $val->stuName;
				$data[$k]["progress"] = $val->course['progress'];
				$data[$k]["price"] = $val->price;
				$data[$k]["priceRefund"] = $val->price_refund;
				if($val->content_refund_status==-1) {
					$data[$k]["refundStatus"]= "退费失败";
				}elseif($val->content_refund_status == 0) {
					$data[$k]["refundStatus"]= "审核中";
				}else{
					$data[$k]["refundStatus"]= "已退费";
                }
			}
		}
		if (empty($data)) {
			header("Content-type:text/html;charset=utf-8");
			echo '<script type="text/javascript">alert("没有退费记录");history.go(-1);"</script>';
			exit;
		}
		//实例化表格
		$objPHPExcel = new PHPExcel();
		//保存excel—2007格式
		$objWriter = new PHPExcel_Writer_Excel2007($objPHPExcel);
		//基本设置
		$fileName = "退费记录";
		$objProps = $objPHPExcel->getProperties();
		$objProps->setCreator("www.yunke.com");
		$objProps->setLastModifiedBy("www.yunke.com");
		$objProps->setTitle("Office XLS Test Document");
		$objProps->setSubject("Office XLS Test Document, yunke");
		$objProps->setDescription("Test document, generated by PHPExcel.");
		$objProps->setKeywords("office excel PHPExcel");
		$objProps->setCategory("报表");
		$objPHPExcel->setActiveSheetIndex(0);
		// 行高
		for ($i = 1; $i <= 9; $i++) {
			$objPHPExcel->getActiveSheet()->getRowDimension($i)->setRowHeight(22);
		}
		$objActiveSheet = $objPHPExcel->getActiveSheet();
		$objActiveSheet->getColumnDimension('A')->setWidth(18);
		$objActiveSheet->getColumnDimension('B')->setWidth(30);
		$objActiveSheet->getColumnDimension('C')->setWidth(30);
		$objActiveSheet->getColumnDimension('D')->setWidth(30);
		$objActiveSheet->getColumnDimension('E')->setWidth(15);
		$objActiveSheet->getColumnDimension('F')->setWidth(15);
		$objActiveSheet->getColumnDimension('G')->setWidth(15);
		$objActiveSheet->getColumnDimension('H')->setWidth(15);
		$objActiveSheet->setTitle($fileName);
		$objPHPExcel->getActiveSheet()->mergeCells('A1:K1');
		$objActiveSheet->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->setCellValue('A1', $fileName);
		//设置表头
		$objActiveSheet->getStyle('A2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('B2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('C2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('D2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('E2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('F2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('G2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('H2')->getFont()->setBold(true);
		$objActiveSheet->getStyle('A2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('B2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('C2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('D2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('E2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('F2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('G2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->getStyle('H2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$objActiveSheet->setCellValue('A2', '日期');
		$objActiveSheet->setCellValue('B2', '课程名');
		$objActiveSheet->setCellValue('C2', '订单号');
		$objActiveSheet->setCellValue('D2', '进度');
		$objActiveSheet->setCellValue('E2', '申请人');
		$objActiveSheet->setCellValue('F2', '实付款');
		$objActiveSheet->setCellValue('G2', '退费状态');
		$objActiveSheet->setCellValue('H2', '退费金额');
		//设置第二列为文本格式 防止科学计数
		$objActiveSheet->getStyle('C2')->getNumberFormat()->setFormatCode(\PHPExcel_Style_NumberFormat::FORMAT_TEXT);
		//填充表格内容
		$j = 3;
		foreach ($data as $k => $val) {
			$objActiveSheet->setCellValue('A' . $j, $val['createTime']);
			$objActiveSheet->setCellValue('B' . $j, $val['courseName']);
			$objActiveSheet->setCellValue('C' . $j, ' '.$val['orderSn'].' ');
			$objActiveSheet->setCellValue('D' . $j, $val['className']."-共".$val['planNum']."章-已学".$val['progress']."节");
			$objActiveSheet->setCellValue('E' . $j, $val['stuName']);
			$objActiveSheet->setCellValue('F' . $j, "￥".$val['price']);
			$objActiveSheet->setCellValue('G' . $j, $val['refundStatus']);
			$objActiveSheet->setCellValue('H' . $j, "￥".$val['priceRefund']);
			$objActiveSheet->getStyle('A' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('B' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('C' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('D' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('E' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('F' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('G' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$objActiveSheet->getStyle('H' . $j)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
			$j++;
		}
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
		if (empty($fileName)) {
			$ftime = time();
			$outputFileName = $ftime . ".xls";
		} else {
			$outputFileName = $fileName . ".xls";
		}
		//加此防乱码
		ob_clean();
		@header("Pragma: public");
		@header("Expires: 0");
		@header("Cache-Control:must-revalidate,post-check=0,pre-check=0");
		@header("Content-Type:charset=UTF-8");
		@header("Content-Type:application/force-download");
		@header("Content-Type:application/vnd.ms-execl");
		@header("Content-Type:application/octet-stream");
		@header("Content-Type:application/download");
		@header('Content-Disposition:attachment;filename="' . $outputFileName . '"');
		@header("Content-Transfer-Encoding:binary");
		$objWriter->save('php://output');
	}
	
}


