<?php

class interface_version extends interface_base
{
     /*
      * 版本升级
      * @author zhengtianlong
      */
    public function pagePc()
    {
        $config = SConfig::getConfig(ROOT_CONFIG."/version.conf",'default');
		
        $header = (isset($_SERVER['HTTPS']) && (strtolower($_SERVER['HTTPS']) == 'on')) ? "https" : "http";
        $host = $header.'://'.$_SERVER['HTTP_HOST'];
		$download = explode(',',$config->windows->download);
		$download[0] = $host.$download[0];
		$data['windows'] = [
			'version'     => explode(',',$config->windows->version),
			'description' => $config->windows->description,
			'min_version' => explode(',',$config->windows->min_version),
			'download'    => $download
		];
		
		foreach($config->windows->dependency as $k=>$v)
		{
			$data['windows']['dependency'][$k] = $v;
		}
		
        $this->setData($data);
    }
	
	public function pageAndroid()
	{
		$this->v(['version'=>1000]);
		$version = $this->paramsInfo['params']['version'];
		$config = SConfig::getConfig(ROOT_CONFIG."/version.conf",'default');
		$header = (isset($_SERVER['HTTPS']) && (strtolower($_SERVER['HTTPS']) == 'on')) ? "https" : "http";
        $host = $header.'://'.$_SERVER['HTTP_HOST'];
		
		foreach($config->android->download as $k=>$v){
			$data['windows']['dependency'][$k] = $v;
		}
		
		$data = [
			'force'       => ($version<$config->android->minVersion)?1:0,
			'versionCode' => $config->android->versionCode,
			'versionName' => $config->android->versionName,
			'download'    => [
				'release' => $host.$config->android->download->release,
				'debug'   => !empty($config->android->download->debug) ? $config->android->download->debug : '' 
			], 
			'description' => $config->android->description
		];
		
		$this->setData($data);
	}
}

