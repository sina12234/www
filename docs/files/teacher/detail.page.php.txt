<?php

class teacher_detail extends STpl
{
    public function __construct($inPath)
    {
        if (!isset($inPath[3]) || empty($inPath[3])) {
            $this->redirect('/');
        }

        $this->tid  = intval($inPath[3]);

        $this->info = teacher_api::getTeacherInfo($this->tid);
        if (empty($this->info)) {
            $this->redirect('/');
        }

        $this->user = user_api::loginedUser();

        $this->uid = !empty($this->user['uid']) ? $this->user['uid'] : 0;

        $org = user_organization::subdomain();

        $this->orgOwner = !empty($org) ? $org->userId : 0;
    }

    public function pageEntry()
    {
        $courseList = teacher_api::getTeacherCourse($this->tid, $this->orgOwner, 1, 4);
        $imgList = teacher_api::getImgList($this->tid, 1, 3);
        $articleList = teacher_api::getArticleListByTeacherId($this->tid, 1, 3);
        $this->assign('courseList', $courseList);
        $this->assign('imgList', $imgList);
        $this->assign('articleList', $articleList);
        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);

        $this->render("/teacher/new_teac_index.html");
    }

    public function pageCourse()
    {
        $courseList = teacher_api::getTeacherCourse($this->tid, $this->orgOwner);
        $this->assign('courseList', $courseList);
        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);
        $this->assign('favTotal', 0);

        $this->render("/teacher/new_teac_courses.html");
    }

    public function pageArticle($inPath)
    {
        if (isset($inPath[4]) && is_numeric($inPath[4]) && intval($inPath[4])) {
            $tagId       = intval($inPath[4]);
            $articleList = teacher_api::getArticle($this->tid, $tagId);

            if (empty($articleList)) {
                $this->redirect("/teacher/detail/Article/{$this->tid}");
            }
        } else if (isset($inPath[4]) && $inPath[4] == 'draft') {
            $tagId = 'draft';
            $articleList = teacher_api::getArticle($this->tid, '', 1);
        } else {
            $tagId = 0;
            $articleList = teacher_api::getArticle($this->tid);
        }

        $userType = isset($this->user['types']->teacher) && $this->user['types']->teacher ? 1 : 0;

        $this->assign('list', $articleList);
        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);
        $this->assign('tagId', $tagId);
        $this->assign('userType', $userType);
        $this->assign('favTotal', 0);

        $this->render("/teacher/new_teac_index_article.html");
    }

    public function pagePublish($inPath)
    {
        if ($this->uid != $this->tid) {
            $this->redirect("/teacher/detail/article/{$this->tid}");
        }

        if (isset($inPath[4], $inPath[5]) && ($inPath[4] == 'edit') && intval($inPath[5])) {
            $articleInfo = teacher_api::getArticleDetail($inPath[5]);
            if (empty($articleInfo)) {
                $this->redirect("/teacher/detail/article/{$this->tid}");
            }
            $this->assign('article', $articleInfo);
        }

        $tagList = utility_services::call("/blog/article/GetTagListByTeacherId/{$this->tid}");
        $this->assign('tagList', !empty($tagList->result) ? $tagList->result : '');
        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);
        $this->assign('favTotal', 0);
        $this->assign('imgHost', utility_cdn::filecdn().'/');
        $this->render("/teacher/new_teac_index_textarea.html");
    }

    public function pageArticleDetail($inPath)
    {
        if (!is_numeric($inPath[4]) || !intval($inPath[4])) {
            $this->redirect("/teacher/detail/Article/{$this->tid}");
        }

        $id = intval($inPath[4]);

        $articleInfo = teacher_api::getArticleDetail($id);
        if (empty($articleInfo)) {
            $this->redirect("/teacher/detail/article/{$this->tid}");
        }

        $commentList = teacher_api::getArticleComment($id);

        $this->assign('info', $this->info);
        $this->assign('article', $articleInfo);
        $this->assign('commentList', $commentList);
        $this->assign('tag', teacher_api::getTagNameTotalList($this->tid));
        $this->assign('tid', $this->tid);
        $this->assign('aid', $id);
        $this->assign('uid', $this->uid);

        $this->render("/teacher/new_teac_article_detail.html");
    }

    public function pageComment($inPath)
    {
        $param = [
            'teacherId' => $this->tid
        ];

        $sort = 'desc';
        if (isset($inPath[4]) && $inPath[4]) {
            $sort = trim($inPath[4]);
        }

        $res = teacher_api::getTeacherCourseComment($param);

        if ($sort == 'asc') {
            usort(
                $res,
                function ($a, $b) {
                    return ($a['score'] <= $b['score']) ? -1 : 1;
                }
            );
        }

        if ($sort == 'desc') {
            usort(
                $res,
                function ($a, $b) {
                    return ($a['score'] <= $b['score']) ? 1 : -1;
                }
            );
        }

        $info = [
            'avg_score'     => $this->info->avg_score / 10,
            'desc_score'    => ceil($this->info->desc_score / 10),
            'student_score' => ceil($this->info->student_score / 10),
            'explain_score' => ceil($this->info->explain_score / 10),
        ];

        $org = user_organization::subdomain();
        $head = !empty($org->subdomain) ? $org->subdomain : 'www';
        $http = (isset($_SERVER['HTTPS']) && (strtolower($_SERVER['HTTPS']) == 'on')) ? "https" : "http";
        $host = $http."://".user_organization::course_domain($head);
        $domainConf = SConfig::getConfig(ROOT_CONFIG.'/const.conf', 'platform');

        $this->assign('teacInfo', $info);
        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('sort', $sort);
        $this->assign('list', $res);
        $this->assign('uid', $this->uid);
        $this->assign('favTotal', 0);
        $this->assign('platformUrl', $domainConf->platform);

        $this->render("/teacher/new_student_evaluate.html");
    }

    public function pageStyle()
    {
        $userType = isset($this->user['types']->teacher) && $this->user['types']->teacher ? 1 : 0;

        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);
        $this->assign('list', teacher_api::getImgList($this->tid));
        $this->assign('favTotal', 0);

        if ($userType && $this->uid == $this->tid) {
            $this->render("/teacher/new_teac_pic_up.html");
        } else {
            $this->render("/teacher/new_teac_pic_content.html");
        }

    }

    public function pageImgInfo($inPath)
    {
        $imgId = 0;
        if (!empty($inPath[4])) {
            $imgId = intval($inPath[4]);
        }

        $this->assign('info', $this->info);
        $this->assign('list', teacher_api::getImgList($this->tid));
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);
        $this->assign('imgId', $imgId);
        $this->assign('favTotal', 0);

        $this->render("/teacher/new_teac_pic.html");
    }

    public function pageStyleDetail()
    {
        $res = teacher_api::getImgList($this->tid);

        $list = [];
        if (!empty($res)) {
            foreach ($res as $v) {
                $list[] = [
                    'imgId'     => $v->pk_teacher_img,
                    'name'      => $v->image_name,
                    'thumb_big' => interface_func::imgUrl($v->thumb_big),
                    'thumb_med' => interface_func::imgUrl($v->thumb_med),
                ];
            }
        }

        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('list', $list);
        $this->assign('uid', $this->uid);
        $this->assign('favTotal', 0);

        $this->render("/teacher/new_teac_pic.html");
    }

    public function pageNavHeader($inPath)
    {
        $userType = isset($this->user['types']->teacher) && $this->user['types']->teacher ? 1 : 0;
        $nav = isset($inPath[4]) && $inPath[4] ? $inPath[4] : '';

        $isFav = teacher_api::checkTeacherFav($this->uid, $this->tid);

        $this->assign('isFav', $isFav);
        $this->assign('userType', $userType);
        $this->assign('info', $this->info);
        $this->assign('tid', $this->tid);
        $this->assign('uid', $this->uid);
        $this->assign('nav', $nav);
        $this->assign('favTotal', teacher_api::getTeacherFavTotal($this->tid));

        $this->render("/teacher/teacher_nav_header.html");
    }
}

